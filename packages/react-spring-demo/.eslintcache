[{"/Users/xiaotian/Code/demo/packages/react-spring-demo/src/index.tsx":"1","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/i18n.ts":"2","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/reportWebVitals.ts":"3","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/store/index.ts":"4","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/App.tsx":"5","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/store/userSlice.ts":"6","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/store/otherSlice.ts":"7","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/theme/index.tsx":"8","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/hooks/useThemeMode.tsx":"9","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/api/index.ts":"10","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/api/client.ts":"11","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/components/card.tsx":"12","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/views/Demo/index.tsx":"13","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/views/Index/index.tsx":"14","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/views/Home/index.tsx":"15","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/components/Header/index.tsx":"16","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/components/Icon/Index.tsx":"17","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/views/Demo1/index.tsx":"18"},{"size":1058,"mtime":1625760884636,"results":"19","hashOfConfig":"20"},{"size":596,"mtime":1625760884636,"results":"21","hashOfConfig":"20"},{"size":425,"mtime":1625760884637,"results":"22","hashOfConfig":"20"},{"size":1255,"mtime":1625760884638,"results":"23","hashOfConfig":"20"},{"size":702,"mtime":1626237259063,"results":"24","hashOfConfig":"20"},{"size":1517,"mtime":1625760884638,"results":"25","hashOfConfig":"20"},{"size":281,"mtime":1625760884638,"results":"26","hashOfConfig":"20"},{"size":3486,"mtime":1626199429905,"results":"27","hashOfConfig":"20"},{"size":241,"mtime":1625760884635,"results":"28","hashOfConfig":"20"},{"size":378,"mtime":1625760884635,"results":"29","hashOfConfig":"20"},{"size":1301,"mtime":1625760884635,"results":"30","hashOfConfig":"20"},{"size":2463,"mtime":1625818427481,"results":"31","hashOfConfig":"20"},{"size":3216,"mtime":1626237233968,"results":"32","hashOfConfig":"20"},{"size":225,"mtime":1626199168678,"results":"33","hashOfConfig":"20"},{"size":6944,"mtime":1626199526781,"results":"34","hashOfConfig":"20"},{"size":1826,"mtime":1626199501739,"results":"35","hashOfConfig":"20"},{"size":1523,"mtime":1626199483462,"results":"36","hashOfConfig":"20"},{"size":3337,"mtime":1626254566633,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1xfl5bs",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/xiaotian/Code/demo/packages/react-spring-demo/src/index.tsx",[],["81","82"],"/Users/xiaotian/Code/demo/packages/react-spring-demo/src/i18n.ts",[],"/Users/xiaotian/Code/demo/packages/react-spring-demo/src/reportWebVitals.ts",[],"/Users/xiaotian/Code/demo/packages/react-spring-demo/src/store/index.ts",[],"/Users/xiaotian/Code/demo/packages/react-spring-demo/src/App.tsx",[],"/Users/xiaotian/Code/demo/packages/react-spring-demo/src/store/userSlice.ts",[],"/Users/xiaotian/Code/demo/packages/react-spring-demo/src/store/otherSlice.ts",[],"/Users/xiaotian/Code/demo/packages/react-spring-demo/src/theme/index.tsx",["83"],"import React, { useMemo } from 'react'\nimport styled, {\n  ThemeProvider as StyledComponentsThemeProvider,\n  createGlobalStyle,\n  css,\n  DefaultTheme\n} from 'styled-components'\n\nimport useIsDarkMode from '../hooks/useThemeMode'\nimport { Colors } from './styled'\n\nconst mediaWidthTemplates: any = []\n\nconst white = '#FFFFFF'\nconst black = '#000000'\n\nexport function colors(darkMode: boolean): Colors {\n  return {\n    // base\n    white,\n    black,\n\n    // text\n    text1: darkMode ? '#FFFFFF' : '#000000',\n    text2: darkMode ? '#C3C5CB' : '#565A69',\n    text3: darkMode ? '#6C7284' : '#888D9B',\n    text4: darkMode ? '#565A69' : '#C3C5CB',\n    text5: darkMode ? '#2C2F36' : '#EDEEF2',\n\n    // backgrounds / greys\n    bg1: darkMode ? '#212429' : '#FFFFFF',\n    bg2: darkMode ? '#2C2F36' : '#F7F8FA',\n    bg3: darkMode ? '#40444F' : '#EDEEF2',\n    bg4: darkMode ? '#565A69' : '#CED0D9',\n    bg5: darkMode ? '#6C7284' : '#888D9B',\n\n    //specialty colors\n    modalBG: darkMode ? 'rgba(0,0,0,.425)' : 'rgba(0,0,0,0.3)',\n    advancedBG: darkMode ? 'rgba(0,0,0,0.1)' : 'rgba(255,255,255,0.6)',\n\n    //primary colors\n    primary1: darkMode ? '#2172E5' : '#ff007a',\n    primary2: darkMode ? '#3680E7' : '#FF8CC3',\n    primary3: darkMode ? '#4D8FEA' : '#FF99C9',\n    primary4: darkMode ? '#376bad70' : '#F6DDE8',\n    primary5: darkMode ? '#153d6f70' : '#FDEAF1',\n\n    // color text\n    primaryText1: darkMode ? '#6da8ff' : '#ff007a',\n\n    // secondary colors\n    secondary1: darkMode ? '#2172E5' : '#ff007a',\n    secondary2: darkMode ? '#17000b26' : '#F6DDE8',\n    secondary3: darkMode ? '#17000b26' : '#FDEAF1',\n\n    // other\n    red1: '#FF6871',\n    red2: '#F82D3A',\n    green1: '#27AE60',\n    yellow1: '#FFE270',\n    yellow2: '#F3841E',\n    blue1: '#2172E5'\n\n    // dont wanna forget these blue yet\n    // blue4: darkMode ? '#153d6f70' : '#C4D9F8',\n    // blue5: darkMode ? '#153d6f70' : '#EBF4FF',\n  }\n}\n\nexport function theme(darkMode: boolean): DefaultTheme {\n  return {\n    ...colors(darkMode),\n\n    grids: {\n      sm: 8,\n      md: 12,\n      lg: 24\n    },\n\n    //shadows\n    shadow1: darkMode ? '#000' : '#2F80ED',\n\n    // media queries\n    mediaWidth: mediaWidthTemplates,\n\n    // css snippets\n    flexColumnNoWrap: css`\n      display: flex;\n      flex-flow: column nowrap;\n    `,\n    flexRowNoWrap: css`\n      display: flex;\n      flex-flow: row nowrap;\n    `\n  }\n}\n\nexport default function ThemeProvider({ children }: { children: React.ReactNode }) {\n  const darkMode = useIsDarkMode()\n\n  const themeObject = useMemo(() => theme(darkMode), [darkMode])\n\n  return <StyledComponentsThemeProvider theme={themeObject}>{children}</StyledComponentsThemeProvider>\n}\n\nexport const FixedGlobalStyle = createGlobalStyle`\nhtml, input, textarea, button {\n  font-family: 'Inter', sans-serif;\n  font-display: fallback;\n}\n@supports (font-variation-settings: normal) {\n  html, input, textarea, button {\n    font-family: 'Inter var', sans-serif;\n  }\n}\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n}\n\n* {\n  box-sizing: border-box;\n}\n\nbutton {\n  user-select: none;\n}\n\nhtml {\n  font-size: 16px;\n  font-variant: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n  font-feature-settings: 'ss01' on, 'ss02' on, 'cv01' on, 'cv03' on;\n}\n`\n\nexport const ThemedGlobalStyle = createGlobalStyle`\nhtml {\n  /* color: ${({ theme }) => theme.text1}; */\n  /* background-color: ${({ theme }) => theme.bg2}; */\n}\n\nbody {\n  min-height: 100vh;\n}\n`\n","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/hooks/useThemeMode.tsx",[],"/Users/xiaotian/Code/demo/packages/react-spring-demo/src/api/index.ts",[],["84","85"],"/Users/xiaotian/Code/demo/packages/react-spring-demo/src/api/client.ts",[],"/Users/xiaotian/Code/demo/packages/react-spring-demo/src/components/card.tsx",[],"/Users/xiaotian/Code/demo/packages/react-spring-demo/src/views/Demo/index.tsx",["86","87"],"import React, { useEffect } from 'react';\nimport * as PIXI from 'pixi.js'\nimport { TilingSprite } from '@pixi/sprite-tiling'\nimport { Texture, BaseTexture  } from '@pixi/core'\nimport cat from '../../assets/images/cat.png'\nimport clouds from '../../assets/images/clouds.png'\nimport bg from '../../assets/images/bg.png'\nimport ground from '../../assets/images/ground.png'\nimport player from '../../assets/images/player.png'\n\nconst Demo: React.FC = () => {\n\n  const load = () => {\n\n    let width = document.body.clientWidth || document.documentElement.clientWidth\n    let height = document.body.clientHeight || document.documentElement.clientHeight\n\n    // The application will create a renderer using WebGL, if possible,\n    // with a fallback to a canvas render. It will also setup the ticker\n    // and the root stage PIXI.Container\n    const app = new PIXI.Application({\n      width: width,\n      height: height,\n      antialias: true,    // default: false\n    });\n\n    let rectangle = new PIXI.Graphics();\n    rectangle.lineStyle(2, 0xFF3300, 1);\n    rectangle.beginFill(0x66CCFF);\n    rectangle.drawPolygon([\n      182, 64,\n      313, 64,\n      362, 162,\n      313,260,\n      182,260,\n      131,162,\n    ]);\n    rectangle.endFill();\n    rectangle.x = 170;\n    rectangle.y = 170;\n    app.stage.addChild(rectangle);\n\n\n    let style = new PIXI.TextStyle({\n      fontFamily: \"Arial\",\n      fontSize: 36,\n      fill: \"white\",\n      stroke: '#ff3300',\n      strokeThickness: 4,\n      dropShadow: true,\n      dropShadowColor: \"#000000\",\n      dropShadowBlur: 4,\n      dropShadowAngle: Math.PI / 6,\n      dropShadowDistance: 6,\n    });\n    let message = new PIXI.Text(\"Hello Pixi!\", style);\n    message.position.set(54, 96);\n    app.stage.addChild(message);\n\n\n\n    // The application will create a canvas element for you that you\n    // can then insert into the DOM\n    (document as any).querySelector('#pixi').appendChild(app.view);\n\n    // load the texture we need\n    app.loader\n      .add('bunny', cat)\n      .add('clouds', clouds)\n      .add('bg', bg)\n      .add('ground', ground)\n      .add('player', player)\n      .load((loader, resources) => {\n\n        console.log('resources', resources)\n\n        // This creates a texture from a 'bunny.png' image\n        const bunny = new PIXI.Sprite(resources.bunny.texture);\n\n        // Setup the position of the bunny\n        bunny.x = app.renderer.width / 2;\n        bunny.y = app.renderer.height / 2;\n\n        // Rotate around the center\n        bunny.anchor.x = 0.5;\n        bunny.anchor.y = 0.5;\n\n        // Add the bunny to the scene we are building\n        app.stage.addChild(bunny);\n\n\n      // const texture = new Texture(resources.clouds.texture);\n      const tilingSprite = new TilingSprite(resources.clouds.texture, width, 263);\n      app.stage.addChild(tilingSprite);\n\n\n      // Listen for frame updates\n      app.ticker.add(() => {\n        // each frame we spin the bunny around a bit\n        bunny.rotation += 0.01;\n        // bunny.position.x += 1\n\n        tilingSprite.tilePosition.x -= 1\n      });\n    });\n\n  }\n\n  useEffect(() => {\n\n    window.onload = () => {\n      load()\n    }\n\n\n  }, [])\n\n  return (\n    <div id=\"pixi\"></div>\n  );\n}\n\nexport default Demo;\n","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/views/Index/index.tsx",["88"],"import React, { useEffect } from 'react';\nimport Card from '../../components/card'\n\n\nconst Index: React.FC = () => {\n\n  return (\n    <div className=\"card-wrapper\">\n      <Card></Card>\n    </div>\n  );\n}\n\nexport default Index;\n","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/views/Home/index.tsx",["89"],"import React, { useCallback } from 'react'\nimport {\n  useSpringRef,\n  useChain,\n  useSpring,\n  animated,\n  Spring,\n} from 'react-spring'\nimport styled from 'styled-components'\nimport VisibilitySensor from 'react-visibility-sensor'\nimport Item1 from '../../assets/svg/item1.svg'\nimport Item2 from '../../assets/svg/item2.svg'\nimport Item3 from '../../assets/svg/item3.svg'\nimport Item4 from '../../assets/svg/item4.svg'\nimport Header from '../../components/Header/index'\n\nexport default function Home() {\n  // animated start\n  const animatedHead = useSpring({\n    from: { backgroundColor: '#fff' },\n    to: { backgroundColor: '#f5f5f5' },\n    duration: 1000,\n  })\n\n  const springRefTitle = useSpringRef()\n  const animatedTitle = useSpring({\n    from: { y: 10, opacity: 0 },\n    to: { y: 0, opacity: 1 },\n    ref: springRefTitle,\n  })\n\n  const springRefDescription = useSpringRef()\n  const animatedDescription = useSpring({\n    from: { y: 10, opacity: 0 },\n    to: { y: 0, opacity: 1 },\n    ref: springRefDescription,\n  })\n\n  useChain([springRefTitle, springRefDescription], [0, 0.3])\n\n  const animatedItemLeftConfig = useCallback((state) => {\n    return state ? { x: 0, opacity: 1 } : { x: -40, opacity: 0 }\n  }, [])\n  const animatedItemRightConfig = useCallback((state) => {\n    return state ? { x: 0, opacity: 1 } : { x: 40, opacity: 0 }\n  }, [])\n\n  // animated end\n\n  return (\n    <>\n      <Header></Header>\n      <StyledHead style={{ ...animatedHead }}>\n        <StyledHeadTitle style={{ ...animatedTitle }}>\n          Welcome to <a href=\"\">UCenter!</a>\n        </StyledHeadTitle>\n\n        <StyledHeadDescription style={{ ...animatedDescription }}>\n          Get started\n        </StyledHeadDescription>\n      </StyledHead>\n\n      <StyledItem>\n        <VisibilitySensor partialVisibility>\n          {({ isVisible }) => (\n            <Spring to={animatedItemLeftConfig(isVisible)}>\n              {(styles) => (\n                <StyledItemImg style={styles} src={Item1} alt=\"illustration\" />\n              )}\n            </Spring>\n          )}\n        </VisibilitySensor>\n        <VisibilitySensor partialVisibility>\n          {({ isVisible }) => (\n            <Spring to={animatedItemRightConfig(isVisible)}>\n              {(styles) => (\n                <StyledItemCard href=\"https://nextjs.org/docs\" style={styles}>\n                  <h2>Documentation &rarr;</h2>\n                  <p>\n                    Find in-depth information about Next.js features and API.\n                  </p>\n                </StyledItemCard>\n              )}\n            </Spring>\n          )}\n        </VisibilitySensor>\n      </StyledItem>\n\n      <StyledItem>\n        <VisibilitySensor partialVisibility>\n          {({ isVisible }) => (\n            <Spring to={animatedItemLeftConfig(isVisible)}>\n              {(styles) => (\n                <StyledItemCard href=\"https://nextjs.org/learn\" style={styles}>\n                  <h2>Learn &rarr;</h2>\n                  <p>\n                    Learn about Next.js in an interactive course with quizzes!\n                  </p>\n                </StyledItemCard>\n              )}\n            </Spring>\n          )}\n        </VisibilitySensor>\n\n        <VisibilitySensor partialVisibility>\n          {({ isVisible }) => (\n            <Spring to={animatedItemRightConfig(isVisible)}>\n              {(styles) => (\n                <StyledItemImg src={Item2} alt=\"illustration\" style={styles} />\n              )}\n            </Spring>\n          )}\n        </VisibilitySensor>\n      </StyledItem>\n\n      <StyledItem>\n        <VisibilitySensor partialVisibility>\n          {({ isVisible }) => (\n            <Spring to={animatedItemLeftConfig(isVisible)}>\n              {(styles) => (\n                <StyledItemImg style={styles} src={Item3} alt=\"illustration\" />\n              )}\n            </Spring>\n          )}\n        </VisibilitySensor>\n\n        <VisibilitySensor partialVisibility>\n          {({ isVisible }) => (\n            <Spring to={animatedItemRightConfig(isVisible)}>\n              {(styles) => (\n                <StyledItemCard\n                  style={styles}\n                  href=\"https://github.com/vercel/next.js/tree/master/examples\"\n                >\n                  <h2>Examples &rarr;</h2>\n                  <p>\n                    Discover and deploy boilerplate example Next.js projects.\n                  </p>\n                </StyledItemCard>\n              )}\n            </Spring>\n          )}\n        </VisibilitySensor>\n      </StyledItem>\n\n      <StyledItem>\n        <VisibilitySensor partialVisibility>\n          {({ isVisible }) => (\n            <Spring to={animatedItemLeftConfig(isVisible)}>\n              {(styles) => (\n                <StyledItemCard\n                  style={styles}\n                  href=\"https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app\"\n                >\n                  <h2>Deploy &rarr;</h2>\n                  <p>\n                    Instantly deploy your Next.js site to a public URL with\n                    Vercel.\n                  </p>\n                </StyledItemCard>\n              )}\n            </Spring>\n          )}\n        </VisibilitySensor>\n\n        <VisibilitySensor partialVisibility>\n          {({ isVisible }) => (\n            <Spring to={animatedItemRightConfig(isVisible)}>\n              {(styles) => (\n                <StyledItemImg style={styles} src={Item4} alt=\"illustration\" />\n              )}\n            </Spring>\n          )}\n        </VisibilitySensor>\n      </StyledItem>\n      <StyledFooter>© 2021 Meta Network All Rights Served</StyledFooter>\n    </>\n  )\n}\n\nconst StyledHead = styled(animated.section)`\n  width: 100%;\n  height: 600px;\n  background-color: #f5f5f5;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst StyledHeadTitle = styled(animated.h1)`\n  margin: 0;\n  line-height: 1.15;\n  font-size: 4rem;\n  text-align: center;\n  a {\n    color: #0070f3;\n    text-decoration: none;\n  }\n  a:hover,\n  a:focus,\n  a:active {\n    text-decoration: underline;\n  }\n`\nconst StyledHeadDescription = styled(animated.p)`\n  line-height: 1.5;\n  font-size: 1.5rem;\n  text-align: center;\n`\n\nconst StyledItem = styled.section`\n  max-width: 1400px;\n  padding: 0 20px;\n  margin: 200px auto;\n  display: flex;\n  justify-content: center;\n  @media screen and (max-width: 768px) {\n    flex-direction: column;\n  }\n  @media screen and (max-width: 576px) {\n    padding: 0 10px;\n  }\n`\nconst StyledItemImg = styled(animated.img)`\n  width: 500px;\n  @media screen and (max-width: 768px) {\n    width: 90%;\n    margin: 0 auto;\n  }\n`\nconst StyledItemCard = styled(animated.a)`\n  margin: 0;\n  padding: 1.5rem 4rem;\n  text-align: left;\n  color: inherit;\n  text-decoration: none;\n  border-radius: 10px;\n`\n\nconst StyledFooter = styled.footer`\n  width: 100%;\n  height: 100px;\n  border-top: 1px solid #eaeaea;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/components/Header/index.tsx",["90","91"],"import React from 'react'\nimport styled from 'styled-components'\nimport { UIcon } from '../../components/Icon/Index'\n\nconst Header: React.FC = () => {\n  return (\n    <StyledHeader>\n      <StyledContainer>\n          <a>\n            <StyledLogo></StyledLogo>\n          </a>\n        <StyledOhter>\n          <StyledNav>\n            <StyledNavLink>Home</StyledNavLink>\n            <StyledNavLink>About</StyledNavLink>\n          </StyledNav>\n\n          <StyledAccount>\n              <a>\n                <StyledAccountBtn>Sign In</StyledAccountBtn>\n              </a>\n          </StyledAccount>\n        </StyledOhter>\n      </StyledContainer>\n    </StyledHeader>\n  )\n}\n\nconst StyledHeader = styled.header`\n  border-bottom: 1px solid #eaeaea;\n`\nconst StyledContainer = styled.div`\n  max-width: 1400px;\n  padding: 8px 20px;\n  margin: 0 auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  box-sizing: border-box;\n  @media screen and (max-width: 576px) {\n    padding-left: 10px;\n    padding-right: 10px;\n  }\n`\nconst StyledLogo = styled(UIcon)`\n  .icon-svg {\n    width: 40px;\n    height: 40px;\n    font-size: 40px;\n    fill: #1da1f2;\n  }\n`\nconst StyledOhter = styled.div`\n  display: flex;\n  align-items: center;\n`\nconst StyledNav = styled.nav``\nconst StyledNavLink = styled.a`\n  font-size: 16px;\n  margin: 0 16px;\n  color: #696969;\n  &:hover {\n    color: #333;\n  }\n`\nconst StyledAccount = styled.div`\n  margin-left: 40px;\n`\nconst StyledAccountBtn = styled.button`\n  background-color: #1da1f2;\n  border: 1px solid #1da1f2;\n  padding: 8px 30px;\n  border-radius: 30px;\n  font-size: 14px;\n  color: #fff;\n  text-transform: uppercase;\n  cursor: pointer;\n  outline: none;\n  transition: all .2s;\n  font-weight: bold;\n  &:hover {\n    border-color: #1a91da;\n    background-color: #1a91da;\n  }\n`\n\nexport default Header\n","/Users/xiaotian/Code/demo/packages/react-spring-demo/src/components/Icon/Index.tsx",[],"/Users/xiaotian/Code/demo/packages/react-spring-demo/src/views/Demo1/index.tsx",["92","93","94","95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":14},{"ruleId":"96","replacedBy":"104"},{"ruleId":"98","replacedBy":"105"},{"ruleId":"100","severity":1,"message":"106","line":4,"column":10,"nodeType":"102","messageId":"103","endLine":4,"endColumn":17},{"ruleId":"100","severity":1,"message":"107","line":4,"column":19,"nodeType":"102","messageId":"103","endLine":4,"endColumn":30},{"ruleId":"100","severity":1,"message":"108","line":1,"column":17,"nodeType":"102","messageId":"103","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"110","line":55,"column":22,"nodeType":"111","endLine":55,"endColumn":33},{"ruleId":"109","severity":1,"message":"112","line":9,"column":11,"nodeType":"111","endLine":9,"endColumn":14},{"ruleId":"109","severity":1,"message":"112","line":19,"column":15,"nodeType":"111","endLine":19,"endColumn":18},{"ruleId":"100","severity":1,"message":"113","line":3,"column":10,"nodeType":"102","messageId":"103","endLine":3,"endColumn":22},{"ruleId":"100","severity":1,"message":"106","line":4,"column":10,"nodeType":"102","messageId":"103","endLine":4,"endColumn":17},{"ruleId":"100","severity":1,"message":"107","line":4,"column":19,"nodeType":"102","messageId":"103","endLine":4,"endColumn":30},{"ruleId":"100","severity":1,"message":"114","line":5,"column":10,"nodeType":"102","messageId":"103","endLine":5,"endColumn":16},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"@typescript-eslint/no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar",["115"],["116"],"'Texture' is defined but never used.","'BaseTexture' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'TilingSprite' is defined but never used.","'Sprite' is defined but never used.","no-global-assign","no-unsafe-negation"]